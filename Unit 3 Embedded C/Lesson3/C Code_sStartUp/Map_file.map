
Allocating common symbols
Common symbol       size              file

ok                  0x4               main.o
a                   0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x08000000         0x00020000         xr
SRAM             0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map


.text           0x08000000      0x1c0
 *(.vectors*)
 .vectors       0x08000000       0x58 startup.o
                0x08000000                vectors
 *(.text*)
 .text          0x08000058       0xa8 main.o
                0x08000058                main
 .text          0x08000100       0xc0 startup.o
                0x08000100                FLASH
                0x08000100                EXTI0
                0x08000100                BusFualt
                0x08000100                Reserved1
                0x08000100                WWDG
                0x08000100                DebugMonitor
                0x08000100                NMI
                0x08000100                PendSV
                0x08000100                Reserved
                0x08000100                EXTI2
                0x08000100                RCC
                0x08000100                Reset_Handled
                0x08000100                SVCall
                0x08000100                RTC
                0x08000100                HardFault
                0x08000100                TAMPER
                0x08000100                SysTick
                0x08000100                EXTI1
                0x08000100                UsageFualt
                0x08000100                PVD
                0x08000100                MemManage
                0x0800010c                Reset
 *(.rodata)
                0x080001c0                _E_text = .

.glue_7         0x080001c0        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x080001c0        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x080001c0        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x080001c0        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x080001c0        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x080001c0        0x0
 .rel.iplt      0x00000000        0x0 main.o

.data           0x20000000        0xc load address 0x080001c0
                0x20000000                _S_DATA = .
 *(.data)
 .data          0x20000000        0xc main.o
                0x20000000                ahmed
 .data          0x2000000c        0x0 startup.o
                0x2000000c                _E_DATA = .
                0x2000000c                . = ALIGN (0x4)

.igot.plt       0x2000000c        0x0 load address 0x080001cc
 .igot.plt      0x00000000        0x0 main.o

.bss            0x2000000c     0x1008 load address 0x080001cc
                0x2000000c                _S_BSS = .
 *(.bss*)
 .bss           0x2000000c        0x0 main.o
 .bss           0x2000000c        0x0 startup.o
                0x2000000c                . = ALIGN (0x4)
                0x2000000c                _E_BSS = .
                0x2000000c                . = ALIGN (0x4)
                0x2000100c                . = (. + 0x1000)
 *fill*         0x2000000c     0x1000 
                0x2000100c                _stack_top = .
 COMMON         0x2000100c        0x8 main.o
                0x2000100c                ok
                0x20001010                a
LOAD main.o
LOAD startup.o
OUTPUT(app.elf elf32-littlearm)

.debug_info     0x00000000      0x2f2
 .debug_info    0x00000000      0x177 main.o
 .debug_info    0x00000177      0x17b startup.o

.debug_abbrev   0x00000000      0x1d5
 .debug_abbrev  0x00000000      0x10e main.o
 .debug_abbrev  0x0000010e       0xc7 startup.o

.debug_loc      0x00000000       0x9c
 .debug_loc     0x00000000       0x38 main.o
 .debug_loc     0x00000038       0x64 startup.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 startup.o

.debug_line     0x00000000       0xeb
 .debug_line    0x00000000       0x5f main.o
 .debug_line    0x0000005f       0x8c startup.o

.debug_str      0x00000000      0x190
 .debug_str     0x00000000      0x110 main.o
                                0x133 (size before relaxing)
 .debug_str     0x00000110       0x80 startup.o
                                0x17a (size before relaxing)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 startup.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 main.o
 .ARM.attributes
                0x00000033       0x33 startup.o

.debug_frame    0x00000000       0x78
 .debug_frame   0x00000000       0x2c main.o
 .debug_frame   0x0000002c       0x4c startup.o
