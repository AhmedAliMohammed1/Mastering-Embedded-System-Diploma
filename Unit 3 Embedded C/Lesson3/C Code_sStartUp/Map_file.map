
Allocating common symbols
Common symbol       size              file

ok                  0x4               main.o
a                   0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000008000000 0x0000000000020000 xr
SRAM             0x0000000020000000 0x0000000000005000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000008000000      0x168
 *(.vectors*)
 .vectors       0x0000000008000000       0x58 startup.o
                0x0000000008000000                vectors
 *(.text*)
 .text          0x0000000008000058       0x78 main.o
                0x0000000008000058                main
 .text          0x00000000080000d0       0x98 startup.o
                0x00000000080000d0                FLASH
                0x00000000080000d0                EXTI0
                0x00000000080000d0                BusFualt
                0x00000000080000d0                Reserved1
                0x00000000080000d0                WWDG
                0x00000000080000d0                DebugMonitor
                0x00000000080000d0                NMI
                0x00000000080000d0                PendSV
                0x00000000080000d0                Reserved
                0x00000000080000d0                EXTI2
                0x00000000080000d0                RCC
                0x00000000080000d0                Reset_Handled
                0x00000000080000d0                SVCall
                0x00000000080000d0                RTC
                0x00000000080000d0                HardFault
                0x00000000080000d0                TAMPER
                0x00000000080000d0                SysTick
                0x00000000080000d0                EXTI1
                0x00000000080000d0                UsageFualt
                0x00000000080000d0                PVD
                0x00000000080000d0                MemManage
                0x00000000080000dc                Reset
 *(.rodata)
                0x0000000008000168                _E_text = .

.glue_7         0x0000000008000168        0x0
 .glue_7        0x0000000008000168        0x0 linker stubs

.glue_7t        0x0000000008000168        0x0
 .glue_7t       0x0000000008000168        0x0 linker stubs

.vfp11_veneer   0x0000000008000168        0x0
 .vfp11_veneer  0x0000000008000168        0x0 linker stubs

.v4_bx          0x0000000008000168        0x0
 .v4_bx         0x0000000008000168        0x0 linker stubs

.iplt           0x0000000008000168        0x0
 .iplt          0x0000000008000168        0x0 main.o

.rel.dyn        0x0000000008000168        0x0
 .rel.iplt      0x0000000008000168        0x0 main.o

.data           0x0000000020000000        0xc load address 0x0000000008000168
                0x0000000020000000                _S_DATA = .
 *(.data)
 .data          0x0000000020000000        0xc main.o
                0x0000000020000000                ahmed
 .data          0x000000002000000c        0x0 startup.o
                0x000000002000000c                _E_DATA = .
                0x000000002000000c                . = ALIGN (0x4)

.igot.plt       0x000000002000000c        0x0 load address 0x0000000008000174
 .igot.plt      0x000000002000000c        0x0 main.o

.bss            0x000000002000000c     0x1008 load address 0x0000000008000174
                0x000000002000000c                _S_BSS = .
 *(.bss*)
 .bss           0x000000002000000c        0x0 main.o
 .bss           0x000000002000000c        0x0 startup.o
                0x000000002000000c                . = ALIGN (0x4)
                0x000000002000000c                _E_BSS = .
                0x000000002000000c                . = ALIGN (0x4)
                0x000000002000100c                . = (. + 0x1000)
 *fill*         0x000000002000000c     0x1000 
                0x000000002000100c                _stack_top = .
 COMMON         0x000000002000100c        0x8 main.o
                0x000000002000100c                ok
                0x0000000020001010                a
LOAD main.o
LOAD startup.o
OUTPUT(app.elf elf32-littlearm)

.debug_info     0x0000000000000000      0x2e4
 .debug_info    0x0000000000000000      0x170 main.o
 .debug_info    0x0000000000000170      0x174 startup.o

.debug_abbrev   0x0000000000000000      0x1d5
 .debug_abbrev  0x0000000000000000      0x10e main.o
 .debug_abbrev  0x000000000000010e       0xc7 startup.o

.debug_loc      0x0000000000000000       0xb4
 .debug_loc     0x0000000000000000       0x38 main.o
 .debug_loc     0x0000000000000038       0x7c startup.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 startup.o

.debug_line     0x0000000000000000       0xea
 .debug_line    0x0000000000000000       0x5e main.o
 .debug_line    0x000000000000005e       0x8c startup.o

.debug_str      0x0000000000000000      0x1e6
 .debug_str     0x0000000000000000      0x166 main.o
                                        0x189 (size before relaxing)
 .debug_str     0x0000000000000166       0x80 startup.o
                                        0x1d0 (size before relaxing)

.comment        0x0000000000000000       0x7b
 .comment       0x0000000000000000       0x7b main.o
                                         0x7c (size before relaxing)
 .comment       0x000000000000007b       0x7c startup.o

.ARM.attributes
                0x0000000000000000       0x33
 .ARM.attributes
                0x0000000000000000       0x33 main.o
 .ARM.attributes
                0x0000000000000033       0x33 startup.o

.debug_frame    0x0000000000000000       0x7c
 .debug_frame   0x0000000000000000       0x2c main.o
 .debug_frame   0x000000000000002c       0x50 startup.o
